/* Portable PDP11 Simulator                                         */
/*                                                                  */
/* Version: 4.0                                                     */
/* Author:  Aythan Avior                                            */
/* Date:    1.1.11                                                  */

%*SIM11  ON-LINE  HELP :   commands  list

BREAKPOINTS :                           DISPLAY/SET :
    b  -  set or show breakpoints.          e  -  examine  memory.
    d  -  delete  a  breakpoint.            m  -  modify  memory.
EXECUTE :                                   r  -  display/set  registers.
    R  -  restart.                          l  -  list the symbol table.
    c  -  continue.                         f  -  full-screen parameters.
    s  -  single  step.                     C  -  full-screen colors (PC only).
    t  -  continue  with  trace.            a  -  full-screen address peep.
FILE OPERATIONS :                           S  -  full-screen scroll source.
    o  -  open object/executable file.
    O  -  re-make object/executable file.
    <  -  redirect stdin (Terminal Keyboard).
    >  -  redirect stdout (Terminal Printer).
    L  -  start/stop  logging.          ODT-LIKE :
MISCELLANEOUS :                             p  -  proceed ( like c ).
    F  -  on/off full-screen.               g  -  goto.
    M  -  on/off  memory  trace.            /  -  open  memory location.
    T  -  enable/disable  traps.            $  -  open  register location.
    P  -  Parameters and options.       ODT-LIKE SUBCOMMANDS :
    i  -  print simulator information.      .  -  change  location  forwards.
    h  -  help on commands.                 ^  -  change  location  backwards.
    q  -  quit.                             @  -  indirect  change  location.
    =  -  evaluate  expression.             _  -  pc  relative change location.

*  Several commands may be specified in one line, separated by a semicolon (;).
*  For more help type "h #", where "#" is any command name.

%bSIM11  ON-LINE  HELP :   b  command

SYNOPSIS
                b [ addr [ , <command_list> ] ]

DESCRIPTION
     Without a parameter this command supplies a list of all active "break-
     points",  i.e. those addresses of instructions which when reached (and
     before they are executed) cause the execution to stop and a  new  user
     command  to be requested.
     
     When an expression is supplied as the first parameter to this command,
     a breakpoint is installed at the address represented by the expression.

     The second  parameter is a list of  simulator commands  to be executed
     when reaching the breakpoint. If you do not want to stop at the break-
     point, the last command on that list should be "c", or "p", or "t".
     Note that, the whole list must be enclosed in angle brackets:
     < ... ; ... > .


%dSIM11  ON-LINE  HELP :   d  command

SYNOPSIS
                d  [ addr ]

DESCRIPTION
     Without a parameter this command nullifies (deletes) all active break-
     points.   When  an  expression  is present, only the breakpoint at the
     address represented by the expression is removed.


%RSIM11  ON-LINE  HELP :   R  command

SYNOPSIS
                R

DESCRIPTION
     Restart the machine.

     Main memory and registers are all re-assigned their initial values.
     However, the address view and list of breakpoints are left unchanged.


%cSIM11  ON-LINE  HELP :   c  command

SYNOPSIS
                c

DESCRIPTION
     Continue execution with the instruction which is  pointed  at  by  the
     contents  of  the PC (r7).  Since the PC's initial contents is set by
     the value of the label  "main"  at the assembly source program,   the
     first  time this command is invoked it starts execution at the address
     "main".
     (If  "main" was not defined at assembly time the default entry point is
     octal 2000. In addition, the entry point can be specified explicitly
     to any value using the appropriate option of the ld11 program).

     Execution is stopped whenever a "halt" instruction, a "breakpoint"  or
     an  error  is encountered.  Control is always passed back to the user
     by giving the prompt sign ("@") and waiting for new user commands.

     The user can force the simulator to stop execution by pressing the
     "interrupt" key, which is on UNIX intr-key (default "^C"), however ...
     When the GUI is used, the "Stop" button serves that purpose.


%sSIM11  ON-LINE  HELP :   s  command

SYNOPSIS
                s

DESCRIPTION
     Execute a single instruction and then stop displaying the current con-
     tents  of  all registers.  The instruction executed is that pointed at
     by the PC.  In other words, execute a "single step".


%tSIM11  ON-LINE  HELP :   t  command

SYNOPSIS
                t

DESCRIPTION
     Same as "c" but after each instruction is executed  the  updated  con-
     tents of the registers are displayed.


%eSIM11  ON-LINE  HELP :   e  command

SYNOPSIS
                e  [ start_addr  [ , end_addr ] ]

DESCRIPTION
     Display the contents of  memory  ("examine").   If  no  arguments  are
     specified,  then all the  memory is displayed.   The argument may be a
     single expression, in which case that memory location is displayed, or
     a pair of  expressions separated by a comma,  in which case all memory
     between (and including) the two specified addresses is displayed.  The
     space after the "e" may be omitted.

     If only one memory word is examined,  its contents  are display in the
     following representations:

        one octal word
        one signed decimal word
        one unsigned decimal word
        one hexadecimal word
        two octal bytes
        two ascii characters

    Otherwise, only octal words are displayed.

%mSIM11  ON-LINE  HELP :   m  command

SYNOPSIS
                m addr=value
                m addr=value1,value2, ... , value-n

DESCRIPTION
     Set ("modify") the contents of a memory location.  Assigns "value"  to
     memory location "addr".

     Addr should be word-address (even).

     If more than one value is specified, the list of values is assigned to
     consecutive words in the memory.  No more than 8 values may be listed.


%rSIM11  ON-LINE  HELP :   r  command

SYNOPSIS
                r [ reg=value ]

DESCRIPTION
     With no arguments this command causes the display of all  the  current
     register  values.

     If arguments are specified, "value" is assigned to register "reg",
     which should be an expression with a value between 0 and 7,
     representing one of the register r0, r1, ..., r7.

%lSIM11  ON-LINE  HELP :   l  command

SYNOPSIS
                l

DESCRIPTION
     This command takes no arguments, and lists the symbol table.


%fSIM11  ON-LINE  HELP :   f  command

SYNOPSIS
                f [ param=value ]

DESCRIPTION
     With no arguments this command causes the display of all  the  current
     (non GUI) full screen parameters values,   and their maximal value.

     If arguments are specified, "value" is assigned to parameter  "param",
     which should be an expression with a value between 0 and 7.    "value"
     must be between 0 and the maximal value for this parameter.
     If the simulator is in full screen mode,  a display refresh is done.

SEMANTICS
       f0 - Stack alignment - the address of the top stack row is  k * 2**f0.
       f1 - Source lines    - the number of lines in the Source window.
       f2 - Output lines    - the number of lines in the Input/Output window.
       f3 - Reserved
       f4 - Reserved
       f5 - Reserved
       f6 - Reserved
       f7 - Reserved

%CSIM11  ON-LINE  HELP :   C  command

SYNOPSIS
                C [ color=value ]

DESCRIPTION
     With no arguments this command causes the display of all  the  current
     full screen color values,   and their maximal value.

     If arguments are specified, "value" is assigned to color "color", that
     should be an expression with a value between 0 and 7.  "color" must be
     between 0 and the maximal value for this color.
     If the simulator is in full screen mode,  a display refresh is done.

SEMANTICS
       C0 - Separators (both horizontal and vertical)
       C1 - Registers window
       C2 - Stack window
       C3 - Memory window
       C4 - Break-points window
       C5 - Inpout/Output window
       C6 - Source window
       C7 - Talk window

     Colors are supported in the PC version only,   where the color values
     have 8 bits, according to the BIOS definition:

     +-------+-----------------------+-------------------------------+
     |ForGnd |      BackGround       |           ForGround           |
     +-------+-------+-------+-------+-------+-------+-------+-------+
     | Blink |  Red  | Green | Blue  |Intense|  Red  | Green | Blue  |
     +-------+-------+-------+-------+-------+-------+-------+-------+

%aSIM11  ON-LINE  HELP :   a  command

SYNOPSIS
                a
                a index
                a index=value1
                a index=value1,
                a index=value1,value2

DESCRIPTION
     In full screen mode, the Memory window contains 16 memory peep  lines.
     Each line  has a pointer,  and can be  in one of  the three following
     modes:

       Empty    - not used.
       Single   - displays single memory location in variuos formats.
       Multiple - displays for consecutive memory locations in octal.

     Empty lines are black.

     Single lines have the following format:
       [address]: octal decimal low-byte high-byte low-char high-char.

     Multiple lines have the following format:
       address  M[address]  M[adderss+2]  M[address+4]  M[address+6]

     With no arguments this command prints the index,  pointer and  mode of
     each line.

     With index only, the command empties the specified line.

     With one value and no following comma,   the command loads the pointer 
     of the specified line (by "index") with "value1",   and sets this line
     mode to "single".

     With one value and a following comma, the command loads the pointer of
     the specified line (by "index") with "value1", and sets this line mode
     to "multiple".

     With two values separated by a comma, the command loads the pointer of
     the specified line (by "index") with "value1", and sets this line mode
     to "multiple".  It then continues loading consecutive lines  (wrapping
     from 15 to 0) with advancing pointers,  until "value2" is reached,  or 
     all 16 lines are newly loaded.

     "index" must be between 0 and 17 (15.). "value" must be a legal memory
     address (between 0 and 077776).

%SSIM11  ON-LINE  HELP :   S  command

SYNOPSIS
                S  [ + | - ]

DESCRIPTION
     With a single argument of "+" or "-", this commands scroll the source
     window either downwards in the file (+) or upwards in the file (-).

     With no arguments,  the command re-displays the screen containing the
     current line in the middle, (pointed at by the "pc", and specified by
     the '>' marker).


%=SIM11  ON-LINE  HELP :   =  command

SYNOPSIS
                = expr

DESCRIPTION
     Used to evaluate an expression which is the argument to the command.

     The result is displayed in the following representations:

        one octal word
        one signed decimal word
        one unsigned decimal word
        one hexadecimal word
        two octal bytes
        two ascii characters


%FSIM11  ON-LINE  HELP :   F  command

SYNOPSIS
                F  [ + | - ]

DESCRIPTION
     With a single argument of "+" or "-", this commands either enables (+)
     or disables (-) (the non-GUI) full screen interface.

     Full screen interface maintains 7 windows:

      REGISTERS   - The 7 general registers, the ps, the IR and internal timer.
      STACK       - The stack contents, aligned by f0 (see hf), '>' - top (sp).
      MEMORY      - Single or multiple memory peeping window (see ha).
      BREAKPOINT  - List of active break points (see hb and hd).
      INPUT/OUTPUT- Input for TKB, output for TPB.
      SOURCE      - Source/Object listing (needs *.lst files < 512 lines/file).
      TALK        - Simulator commands input/output.

     With no arguments, it refreshes the screen (in case the  simulator  is
     in full screen mode), and then displays the status of the F flag.

SEE ALSO
     f, C, a, S.


%MSIM11  ON-LINE  HELP :   M  command

SYNOPSIS
                M  [ + | - ]

DESCRIPTION
     With a single argument of "+" or "-", this commands either enables (+)
     or disables (-) a memory trace, i.e. a display of all the memory loca-
     tions which are being accessed during  the  execution  of  a  program.
     Accesses  for  instruction  fetch,  data  read  and data write are all
     displayed.

     With no arguments, it displays the status of the M flag.


%TSIM11  ON-LINE  HELP :   T  command

SYNOPSIS
                T  [ + | - ]

DESCRIPTION
     With a single argument of "+" or "-", this commands either enables (+)
     or disables (-) machine traps.  If disabled machine traps cause
     simulator to stop execution and print a message.

     With no arguments, it displays the status of the T flag.

     NOTE:  Unless you are sure what you are doing, this flag should be off,
     that is T- .

%hSIM11  ON-LINE  HELP :   h  command

SYNOPSIS
                h  [ command ]

DESCRIPTION
     This command allows you to get on-line help from the simulator.
     Without an argument a list all available commands is printed.
     When an argument is specified, an explanation on how to use that
     command is printed.


%oSIM11  ON-LINE  HELP :   o  command

SYNOPSIS
                o  [ filename ]

DESCRIPTION
     This command allows you to load an object or executable file  into
     the simulaor.

     Without an argument the current object/executable file is re-loaded.

     With a filename argument the specified file will be loaded.

     If filename contains a suffix if must be either ".o11" or ".x11".

     If filename does not contains a suffix,  the simulator will first try to
     load a file with ".x11" suffix and if failed a file with ".o11" suffix.


%OSIM11  ON-LINE  HELP :   O  command

SYNOPSIS
                O

DESCRIPTION
     This command allows the user to remake and reload the object/executable
     file back into the simulaor.

     If no file is already loaded in the simulator, the command fails.

     This command does not accept any arguments.

     The command activates the program (or batch file) "mk11" and issues the
     current object/executable file name as the single argument for "mk11".


%<SIM11  ON-LINE  HELP :   <  command

SYNOPSIS
                <  [ filename ]

DESCRIPTION
     This command allows the user to re-open the standard input file (stdin),
     or redirect stdin to another file.  Stdin is the source for the
     Terminal Keyboard of the simulated machine.

     Without an argument, the command will redirect stdin to the terminal,
     or to the terminal window in full_screen/window mode.

     With one agrument the command will redirect stdin to the specified file.

     If the specified file name is @, the current stdin file will be re-opened.
     If stdin was not redirected before using the < command, the simulator has
     no idea of the current stdin file name, hence the command fails.


%>SIM11  ON-LINE  HELP :   >  command

SYNOPSIS
                >  [ filename ]

DESCRIPTION
     This command allows the user to re-open the standard output file (stdout),
     or redirect stdout to another file.  Stdout is the target for the
     Terminal Printer of the simulated machine.

     Without an argument, the command will redirect stdout to the terminal,
     or to the terminal window in full_screen/window mode.

     With one agrument the command will redirect stdout to the specified file.

     If the specified file name is @, the current stdout file will be re-opened.
     If stdout was not redirected before using the > command, the simulator has
     no idea of the current stdout file name, hence the command fails.



%LSIM11  ON-LINE  HELP :   L  command

SYNOPSIS
                L  [ + [filename] | - ]

DESCRIPTION
     This command allows you to control the logging of the simulator session.
     With no arguments it just print the logging status.
     With one argument '-' it terns the logging off.
     With one argument '+' it turns the logging on to the default file.
     With  '+' and a filename, it turns the logging on to that file.
     There is no need to turn the logging off, before changing to a new file.
     The simulator is activated with logging off unless the argument '-r'
     or '-l filename' were specified in the command line.


%qSIM11  ON-LINE  HELP :   q  command

SYNOPSIS
                q

DESCRIPTION
     This command exits the Simulator and returns to the system ("quit").


%iSIM11  ON-LINE  HELP :   i  command

SYNOPSIS
                i

DESCRIPTION
     This command prints information about the machine configuration,
     and the simulator environment.


%/SIM11  ON-LINE  HELP :   /  command

SYNOPSIS
                / addr

DESCRIPTION
     The  "/"  is used  to "open"  a memory location,  i.e.  examining  its
     contents,  and being able  to modify it and/or use it as  addresses to
     further memory locations.  The syntax  requires  that  an   expression
     follows   the "/", representing the memory location to be opened.
     Memory locations are always opened in word size,  an odd address opens
     the word containing the byte being addressed.

     For example "/100" followed by a CR (carriage return)  opens  location
     100  (octal).  The location opened can now be modified by entering any
     octal number. 

     Entering a CR after a location has been opened, without  preceding  it
     by  any  other symbol (see below) or number,  results in that location
     being "closed" and a prompt for a new command printed.

     SUB-COMMANDS (when there is an open location):

        .       change location forward
        ^       change location backwards
        @       change location indirect
        _       change location relative to the PC.


%$SIM11  ON-LINE  HELP :   $  command

SYNOPSIS
                $ reg

DESCRIPTION
     This command  is similar to the  "/" command,  but instead of opening
     a memory location, it opens a register.
     When a register is open, the "_" command  is illegal.


%^SIM11  ON-LINE  HELP :   ^  command

SYNOPSIS
                ^

DESCRIPTION
     Once a location has been opened, the "^"  serves  to  move  backwards,
     i.e.  close  the  present  location  and open the preceding one.  When
     applied to open registers, it results in moving from register  "n"  to
     register  "n-1",  where  r7 follows after r0.  Movement through memory
     locations is in units of words, i.e. from "m" to "m-2".


%.SIM11  ON-LINE  HELP :   .  command

SYNOPSIS
                .

DESCRIPTION
     Once a location has been opened, the "."  serves  to  move  forward,
     i.e.  close  the  present  location  and open the following one.  When
     applied to open registers, it results in moving from register  "n"  to
     register  "n+1",  where  r0 follows after r7.  Movement through memory
     locations is in units of words, i.e. from "m" to "m+2".


%@SIM11  ON-LINE  HELP :   @  command

SYNOPSIS
                @

DESCRIPTION
     This symbol is used for "indirect addressing", i.e.  the  contents  of
     the open location are interpreted as a memory address and the location
     corresponding to that address is  opened  after  the  present  one  is
     closed.


%_SIM11  ON-LINE  HELP :   _  command

SYNOPSIS
                _

DESCRIPTION
     This symbol is used to  interpret  PC-relative  addresses  within  the
     machine  code.  It uses the address of the currently open memory loca-
     tion plus two, as if it were the contents of the PC, and  adds  to  it
     the contents of the memory location as displacement.

     For example, if we had "000100/001000" being displayed, entering "_" and
     then CR would result in the opening of location 1102 (=(100+2)+1000).


%pSIM11  ON-LINE  HELP :   p  command

SYNOPSIS
                p

DESCRIPTION
     This is an alias for the general command "c".


%gSIM11  ON-LINE  HELP :   g  command

SYNOPSIS
                g  [ addr ]

DESCRIPTION
     This command is similar to the general command "c" with the difference
     that  it accepts an argument which is loaded into the PC before start-
     ing  execution.   The  argument  precedes  the  command  and  must  be
     separated  from  it  by a space.  Also, the PS (status word) is zeroed
     before control is passed to the program.

     If no argument is specified, the PC is loaded with the program entry
     point (see "c" command).


%PSIM11  ON-LINE  HELP :   P  command

SYNOPSIS
                Pname=value

DESCRIPTION
     This command allows the user to change the values of internal parameters
     of the simulator.

     'Name' must be one of the following, while 'value' can be any legal
     expression.


     Name   Initial Value    Usage
     ------------------------------------------------------------------------

     confirm            1    Ask/don't-ask confirmation when quitting.

     tks_addr      177560    The address of the TKS i/o register.
     tkb_addr      177562    The address of the TKB i/o register.
     tps_addr      177564    The address of the TPS i/o register.
     tpb_addr      177566    The address of the TPB i/o register.
     cks_addr      177546    The address of the CKS register.

     rbm_cycle          1    Internal Timer cycles for Read Byte from Memory.
     rwm_cycle          1    Internal Timer cycles for Read Word from Memory.
     wbm_cycle          1    Internal Timer cycles for Write Byte to Memory.
     wwm_cycle          1    Internal Timer cycles for Write Word to Memory.

     rbio_cycle         1    Internal Timer cycles for Read Byte from IO (TKB).
     rwio_cycle         1    Internal Timer cycles for Read Word from IO (TKB).
     wbio_cycle         1    Internal Timer cycles for Write Byte to IO (TPB).
     wwio_cycle         1    Internal Timer cycles for Write Word to IO (TPB).

     tkb_cycle       1000    Internal Timer cycles to complete a TKB read.
     tpb_cycle       1000    Internal Timer cycles to complete a TPB write.
     clk_cycle       1000    Internal Timer cycles between Clock interrupts.

     idle_increment   500    Internal Timer cycles to jump each time
                             when 'wait'ing for input on TKB.


%*
